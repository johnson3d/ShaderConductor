#version 310 es
#extension GL_EXT_tessellation_shader : require
layout(triangles) in;

layout(binding = 0, std140) uniform type_cbPNTriangles
{
    mat4 viewProj;
    vec4 lightDir;
} cbPNTriangles;

layout(location = 2) patch in vec3 in_var_POSITION3;
layout(location = 3) patch in vec3 in_var_POSITION4;
layout(location = 4) patch in vec3 in_var_POSITION5;
layout(location = 5) patch in vec3 in_var_POSITION6;
layout(location = 6) patch in vec3 in_var_POSITION7;
layout(location = 7) patch in vec3 in_var_POSITION8;
layout(location = 0) patch in vec3 in_var_CENTER;
layout(location = 1) in vec3 in_var_POSITION[];
layout(location = 8) in vec2 in_var_TEXCOORD[];
layout(location = 0) out vec2 out_var_TEXCOORD0;

void main()
{
    vec3 _47_unrolled[3];
    for (int i = 0; i < int(3); i++)
    {
        _47_unrolled[i] = in_var_POSITION[i];
    }
    vec2 _48_unrolled[3];
    for (int i = 0; i < int(3); i++)
    {
        _48_unrolled[i] = in_var_TEXCOORD[i];
    }
    float _59 = gl_TessCoord.x * gl_TessCoord.x;
    float _60 = gl_TessCoord.y * gl_TessCoord.y;
    float _61 = gl_TessCoord.z * gl_TessCoord.z;
    float _62 = _59 * 3.0;
    float _63 = _60 * 3.0;
    float _64 = _61 * 3.0;
    gl_Position = cbPNTriangles.viewProj * vec4(((((((((((_47_unrolled[0] * _61) * gl_TessCoord.z) + ((_47_unrolled[1] * _59) * gl_TessCoord.x)) + ((_47_unrolled[2] * _60) * gl_TessCoord.y)) + ((in_var_POSITION3 * _64) * gl_TessCoord.x)) + ((in_var_POSITION4 * gl_TessCoord.z) * _62)) + ((in_var_POSITION8 * _64) * gl_TessCoord.y)) + ((in_var_POSITION5 * _62) * gl_TessCoord.y)) + ((in_var_POSITION7 * gl_TessCoord.z) * _63)) + ((in_var_POSITION6 * gl_TessCoord.x) * _63)) + ((((in_var_CENTER * 6.0) * gl_TessCoord.z) * gl_TessCoord.x) * gl_TessCoord.y), 1.0);
    out_var_TEXCOORD0 = ((_48_unrolled[0] * gl_TessCoord.z) + (_48_unrolled[1] * gl_TessCoord.x)) + (_48_unrolled[2] * gl_TessCoord.y);
}

